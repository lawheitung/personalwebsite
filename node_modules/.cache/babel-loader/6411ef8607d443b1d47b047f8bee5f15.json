{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanylaw/Desktop/projects/personalwebsite/src/Components/Travel/Travel.js\";\nimport React, { Component } from 'react';\nimport './travel.scss';\nimport TravelMap from '../TravelMap/TravelMap';\nimport { travelmapData } from '../../travelmapData';\nimport ReactMapGL from 'react-map-gl';\nimport { setRTLTextPlugin } from 'react-map-gl';\nimport './travelmap.scss';\nimport * as parkDate from '../../travelmapData.json';\nexport default function Map() {\n  const [viewport, setViewport] = useState({\n    width: 400,\n    height: 400,\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    mapStyle: \"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), parkDate.features.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    latitude: park.geometry.coordinates[1],\n    longitude: park.geometry.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/skateboarding.svg\",\n    alt: \"Skate Park Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.geometry.coordinates[1],\n    longitude: selectedPark.geometry.coordinates[0],\n    onClose: () => {\n      setSelectedPark(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, selectedPark.properties.NAME), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, selectedPark.properties.DESCRIPTIO))) : null));\n}","map":{"version":3,"sources":["/Users/tiffanylaw/Desktop/projects/personalwebsite/src/Components/Travel/Travel.js"],"names":["React","Component","TravelMap","travelmapData","ReactMapGL","setRTLTextPlugin","parkDate","Map","viewport","setViewport","useState","width","height","latitude","longitude","zoom","process","env","REACT_APP_MAPBOX_TOKEN","features","map","park","properties","PARK_ID","geometry","coordinates","e","preventDefault","setSelectedPark","selectedPark","NAME","DESCRIPTIO"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,gBAAR,QAA+B,cAA/B;AACA,OAAO,kBAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,0BAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC;AACvCC,IAAAA,KAAK,EAAE,GADgC;AAEvCC,IAAAA,MAAM,EAAE,GAF+B;AAGvCC,IAAAA,QAAQ,EAAE,OAH6B;AAIvCC,IAAAA,SAAS,EAAE,CAAC,QAJ2B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CAAxC;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,oBACMP,QADN;AAEE,IAAA,oBAAoB,EAAEQ,OAAO,CAACC,GAAR,CAAYC,sBAFpC;AAGE,IAAA,QAAQ,EAAC,yDAHX;AAIE,IAAA,gBAAgB,EAAEV,QAAQ,IAAI;AAC5BC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGF,QAAQ,CAACa,QAAT,CAAkBC,GAAlB,CAAsBC,IAAI,iBACzB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OADvB;AAEE,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAFZ;AAGE,IAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,EAAEC,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,eAAe,CAACP,IAAD,CAAf;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,CADD,CARH,EA0BGQ,YAAY,gBACX,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEA,YAAY,CAACL,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CADZ;AAEE,IAAA,SAAS,EAAEI,YAAY,CAACL,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CAFb;AAGE,IAAA,OAAO,EAAE,MAAM;AACbG,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,YAAY,CAACP,UAAb,CAAwBQ,IAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,YAAY,CAACP,UAAb,CAAwBS,UAA5B,CAFF,CAPF,CADW,GAaT,IAvCN,CADF,CADF;AA6CD","sourcesContent":["import React, { Component } from 'react'\nimport './travel.scss'\nimport TravelMap from '../TravelMap/TravelMap'\nimport {travelmapData} from '../../travelmapData'\n\nimport ReactMapGL from 'react-map-gl';\nimport {setRTLTextPlugin} from 'react-map-gl';\nimport './travelmap.scss'\nimport * as parkDate from '../../travelmapData.json'\n\nexport default function Map() {\n    const [viewport, setViewport] = useState({\n      width: 400,\n      height: 400,\n      latitude: 37.7577,\n      longitude: -122.4376,\n      zoom: 8\n    });\n  \n    return (\n      <div>\n        <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          mapStyle=\"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\"\n          onViewportChange={viewport => {\n            setViewport(viewport);\n          }}\n        >\n          {parkDate.features.map(park => (\n            <Marker\n              key={park.properties.PARK_ID}\n              latitude={park.geometry.coordinates[1]}\n              longitude={park.geometry.coordinates[0]}\n            >\n              <button\n                className=\"marker-btn\"\n                onClick={e => {\n                  e.preventDefault();\n                  setSelectedPark(park);\n                }}\n              >\n                <img src=\"/skateboarding.svg\" alt=\"Skate Park Icon\" />\n              </button>\n            </Marker>\n          ))}\n  \n          {selectedPark ? (\n            <Popup\n              latitude={selectedPark.geometry.coordinates[1]}\n              longitude={selectedPark.geometry.coordinates[0]}\n              onClose={() => {\n                setSelectedPark(null);\n              }}\n            >\n              <div>\n                <h2>{selectedPark.properties.NAME}</h2>\n                <p>{selectedPark.properties.DESCRIPTIO}</p>\n              </div>\n            </Popup>\n          ) : null}\n        </ReactMapGL>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}